Network File System is a distributed file system originally developed by
SUN Microsystems in 1984. A distributed file system differ from normal file
systems in the sense that they operate over the network and allow sharing of
storage resources. NFS was developed as an open standard. It was initially
implemented for UNIX but is now compatible with a wide array of Operating
Systems. NFS has gone through four major revisions, with the first publicly
available version being v2. All the experiments for this research have been
conducted using NFS v4.2

NFS uses the Client-Server architecture. The NFS Server makes available a
disk partition or directory on the network which can then be mounted just
like a local storage device by the clients. For applications running on the
client machine, NFS is just another file system and requires zero
modifications inorder to work. This is made possible by an abstraction
layer called Virtual File System or VFS. VFS defines what operations can be
done on the filesystem regardless of the file system type. When an
application deals with the UNIX file system, it is actually dealing with
VFS. VFS receives data regarding the target file from the application, then
hands it over to the actual file system, which in this case is NFS.

Once NFS receives the data, it is transfered to the server with the help of
Remote Procedure Call (RPC) in External Data Representation (XDR) format.
RPC allows the NFS client to execute instructions on the server. XDR is a
data representation standard that provides a uniform data format which can
be understood by a variety of computers. This is one of the factors that
provide NFS with cross platform compatibilty. The working of NFS protocol
has been shown in figure.

VFS-NFS handover Figure

NFS by default runs in what is called server side synchronous mode. In this
mode, when the NFS client receives a write operation, it connects to the
server, requsts a write and transfers the data. Once the transfer is
;complete, the server syncs the data to its disks. After completing the sync
operation, server returns an acknowledgment message back to the client. The
issue here is that, the client has to wait till it receives the 
acknowledgment.It cannot perform any additional write to the server till the
acknowledgment arrives. This considerably slows down the system. Further,
clients are often configured to work in client side synchronous mode.
In this mode, the client is forced to write the data to the server as
soon as it receives the request. This often causes the system to crawl.

The performance of an NFS system with client and server side synchronous
mode turned on was benchmarked with client side options in /etc/fstab set as
[rw, sync, hard, intr 0 0] and the server side options  in /etc/exports set
as [rw, no_root_squash, subtree_check]. The benchmarks were conducted using
dbench utility part of Phoronix Test Suite. This resulted in performance of
0.94 MB/s. The server and client systems in this case were equipped with
100mbps network adapters. The speeds obtained are thus clearly sub-optimal.
The peformance graph obtained from the benchmark has been shown in figure.
