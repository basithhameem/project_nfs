Network File System is a distributed file system originally developed by
SUN Microsystems in 1984. The differential factors identifying a distributed 
file system from a normal filesystem involves the manner they, operate over the 
network and allow sharing of storage resources. NFS was developed as an open 
standard. It was initially implemented for UNIX but is now compatible with a
wide array of Operating Systems. NFS has gone through four major revisions, 
with the first publicly available version being v2 (RFC 1094). All the 
experiments for this research has been conducted using NFS v4.2

NFS uses the Client-Server architecture. The NFS Server makes available a
disk partition or directory on the network which can then be mounted just
like a local storage device by the clients. For applications running on the
client machine, NFS is just another file system and requires nought
modifications inorder to work. This is made possible by an abstraction
layer called Virtual File System or VFS. VFS defines operations that can be
performed on the filesystem, regardless of the file system type. When an
application deals with the UNIX file system, it is in fact dealing with the
VFS. Upon receival of data regarding the target file from the application, VFS 
then hands it over to the actual file system, which in this instance being NFS.

Once NFS receives the data, it is transfered to the server with the help of
Remote Procedure Call (RPC) in External Data Representation (XDR) format.
RPC allows the NFS client to execute instructions on the server. XDR is a
data representation standard that provides a uniform data format, comprehensible
by a variety of computers. This is one of the factors that provides NFS with
cross platform compatibilty. The working of NFS protocol has been shown in 
Fig. 1.

VFS-NFS handover Figure

NFS by default runs in what is called server side synchronous mode. In this
mode, when the NFS client receives a write operation, it connects to the
server, requests a write and eventually transfers the data. Once the transfer is
complete, the server syncs the data to its disks. On completion of the sync
operation, the server then returns an acknowledgment message back to the client.
The issue arises with the prolonged waiting period the client endures for the
required acknowledgement. This considerably slows down the system.
Furthermore, clients are often configured to work in client side synchronous
mode, wherein the client is forced to write the data to the server as soon
as it receives the request. This often causes the system to crawl.

The performance of an NFS system with client and server side synchronous
mode turned on was benchmarked with client side options in /etc/fstab set as
[rw, sync, hard, intr 0 0] and the server side options  in /etc/exports set
as [rw, no-root-squash, subtree-check]. The benchmarks were conducted using
dbench utility part of Phoronix Test Suite. This resulted in a performance
of 0.94 MB/s. The speeds obtained are thus clearly sub-optimal. The
peformance graph obtained from the benchmark has been shown in Fig. 2.

Performance with client and server sync
